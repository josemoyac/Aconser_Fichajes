openapi: 3.0.3
info:
  title: Aconser Fichajes API
  version: 1.0.0
  description: API para fichaje de presencia, integraciones y gestión de bolsa de horas.
servers:
  - url: http://localhost:3000
    description: Desarrollo local
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: access_token
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [ADMIN, EMPLOYEE]
    TimeEntry:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum: [IN, OUT]
        occurredAtUtc:
          type: string
          format: date-time
        occurredAtLocal:
          type: string
          format: date-time
        localDate:
          type: string
          format: date
        source:
          type: string
          enum: [WEB, AUTO, ADMIN]
    Shift:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum: [OPEN, CLOSED, CORRECTED]
        durationMinutes:
          type: integer
        startEntry:
          $ref: '#/components/schemas/TimeEntry'
        endEntry:
          $ref: '#/components/schemas/TimeEntry'
    AllocationSummary:
      type: object
      properties:
        baseHours:
          type: number
        extraHours:
          type: number
        days:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              baseHours:
                type: number
              extraHours:
                type: number
              presenceHours:
                type: number
    MonthlyAllocation:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        month:
          type: string
        baseHours:
          type: number
        extraHours:
          type: number
        finalized:
          type: boolean
        finalizedAt:
          type: string
          format: date-time
    Project:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        source:
          type: string
          enum: [BC, LOCAL]
        active:
          type: boolean
paths:
  /auth/login:
    get:
      summary: Redirige al proveedor OIDC
      responses:
        '302':
          description: Redirección al proveedor
  /auth/callback:
    get:
      summary: Callback de OIDC
      parameters:
        - in: query
          name: code
          schema:
            type: string
      responses:
        '200':
          description: Sesión creada
  /auth/logout:
    post:
      summary: Cierra la sesión
      responses:
        '200':
          description: Logout correcto
  /auth/me:
    get:
      summary: Obtiene el usuario autenticado
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Usuario autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                me:
                  value:
                    id: 8f4c1f64-2e10-4f34-8a92-0fe8b9bb0001
                    email: empleado@aconser.com
                    name: Empleado Demo
                    role: EMPLOYEE
  /time-entries:
    get:
      summary: Lista fichajes en un rango
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date
        - in: query
          name: to
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Fichajes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntry'
    post:
      summary: Crea un fichaje (idempotente)
      security:
        - cookieAuth: []
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: [IN, OUT]
                occurredAt:
                  type: string
                  format: date-time
                source:
                  type: string
                  enum: [WEB, AUTO, ADMIN]
            example:
              type: IN
              occurredAt: '2024-03-04T08:00:00+01:00'
      responses:
        '201':
          description: Fichaje creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntry'
  /time-entries/{id}:
    put:
      summary: Actualiza un fichaje
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                occurredAt:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Fichaje actualizado
  /shifts:
    get:
      summary: Obtiene turnos por mes
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: month
          schema:
            type: string
            example: '2024-03'
      responses:
        '200':
          description: Lista de turnos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shift'
  /shifts/{id}/close:
    post:
      summary: Cierra un turno abierto
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                endEntryId:
                  type: string
      responses:
        '200':
          description: Turno cerrado
  /allocations/{userId}/{month}:
    get:
      summary: Obtiene la bolsa calculada para un mes
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: month
          required: true
          schema:
            type: string
            example: '2024-03'
      responses:
        '200':
          description: Bolsa y resumen
          content:
            application/json:
              schema:
                type: object
                properties:
                  allocation:
                    $ref: '#/components/schemas/MonthlyAllocation'
                  summary:
                    $ref: '#/components/schemas/AllocationSummary'
  /allocations/{month}/finalize:
    post:
      summary: Finaliza la imputación del mes
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: month
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                allocations:
                  type: array
                  items:
                    type: object
                    properties:
                      projectId:
                        type: string
                      hours:
                        type: number
            example:
              allocations:
                - projectId: 3d45e15b-2e5b-4ad9-9bb3-21e60a6186c3
                  hours: 40
      responses:
        '200':
          description: Imputación finalizada
  /allocations/{month}/report:
    get:
      summary: Informe mensual (Admin)
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: month
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Informe
  /projects:
    get:
      summary: Lista proyectos disponibles
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Proyectos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
  /users/{id}/projects:
    get:
      summary: Proyectos permitidos para un usuario
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Permisos
  /permissions:
    post:
      summary: Actualiza permisos de proyectos
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                projectIds:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Permisos actualizados
  /integrations/a3/webhook:
    post:
      summary: Webhook de vacaciones A3
      responses:
        '200':
          description: Procesado
  /integrations/a3/sync:
    post:
      summary: Sincroniza manualmente vacaciones
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userExternalId:
                  type: string
                from:
                  type: string
                  format: date
                to:
                  type: string
                  format: date
      responses:
        '200':
          description: Sincronización realizada
  /integrations/bc/webhook:
    post:
      summary: Webhook de proyectos BC
      responses:
        '200':
          description: Procesado
  /integrations/bc/sync:
    post:
      summary: Sincroniza manualmente proyectos
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Sincronización realizada
  /audit:
    get:
      summary: Consulta registros de auditoría
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: entity
          schema:
            type: string
        - in: query
          name: entityId
          schema:
            type: string
        - in: query
          name: from
          schema:
            type: string
            format: date-time
        - in: query
          name: to
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Logs
  /settings:
    get:
      summary: Obtiene configuración global
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Configuración
    put:
      summary: Actualiza configuración (Admin)
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Configuración actualizada
  /holidays:
    get:
      summary: Lista festivos por región
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: region
          schema:
            type: string
        - in: query
          name: year
          schema:
            type: integer
      responses:
        '200':
          description: Festivos
    post:
      summary: Registra un festivo (Admin)
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                region:
                  type: string
                date:
                  type: string
                  format: date
                name:
                  type: string
                isWorkingDay:
                  type: boolean
      responses:
        '200':
          description: Festivo guardado
  /health:
    get:
      summary: Liveness check
      responses:
        '200':
          description: OK
  /ready:
    get:
      summary: Readiness check
      responses:
        '200':
          description: Listo
  /metrics:
    get:
      summary: Métricas Prometheus
      responses:
        '200':
          description: Métricas de servicio
